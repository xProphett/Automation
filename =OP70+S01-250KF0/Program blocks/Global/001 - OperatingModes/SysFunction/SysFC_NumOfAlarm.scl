FUNCTION "SysFC_NumOfAlarm" : Void
TITLE = Determine number of alarm bits
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : OlegFuehrus
FAMILY : DIAG
NAME : DIAG
VERSION : 0.1
   VAR_INPUT 
      i_ErrorBits : Array[1..1024] of Bool;   // Stoerer bits
      i_StartBit : Int;   // First bit to be counted
      i_NumOfBits : Int;   // Number of bits to check
   END_VAR

   VAR_OUTPUT 
      o_Amount : Int;
      o_Fault : Bool;
   END_VAR

   VAR_TEMP 
      t_Amount : Int;
      t_Pointer : Int;
      t_Loop : Int;
      t_Fault : Bool;
   END_VAR


BEGIN
	REGION INIT
	    #o_Fault := false;
	    #o_Amount := 0;
	    #t_Amount := 0;
	    #t_Fault := false;
	END_REGION
	
	REGION Parametercheck
	    IF #i_StartBit < 1 THEN  // Parameter zu klein
	        #t_Fault := true;  
	    END_IF;
	    
	    IF #i_StartBit > 1024 THEN  // Parameter zu groß
	        #t_Fault := true;
	    END_IF;
	    
	    IF #i_NumOfBits < 1 THEN  // Parameter zu klein
	        #t_Fault := true;
	    END_IF;
	    
	    IF #i_NumOfBits > 1024 THEN  // Parameter zu groß
	        #t_Fault := true;
	    END_IF;
	    
	    IF (#i_StartBit+#i_NumOfBits) > 1025 THEN  // Zeiger zu groß
	        #t_Fault := true;
	    END_IF;
	    
	END_REGION
	
	REGION Anzahl Bestimmen
	    IF #t_Fault = false THEN
	        FOR #t_Pointer := #i_StartBit TO (#i_StartBit+#i_NumOfBits-1) DO
	            IF #i_ErrorBits[#t_Pointer] = TRUE THEN
	                #t_Amount := #t_Amount + 1;
	            END_IF;
	        END_FOR;
	    END_IF;
	END_REGION
	
	REGION Ausgabe
	    #o_Amount := #t_Amount;
	    #o_Fault := #t_Fault;
	END_REGION
	
END_FUNCTION

