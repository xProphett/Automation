FUNCTION_BLOCK "SysFB_ProzessDatenGruppe"
TITLE = Evaluate process data of a group
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : VAF
FAMILY : PROZESS
NAME : PROZESS
VERSION : 0.1
   VAR_INPUT 
      BEA_Group : Int;   // Number of the machining group [0. . 7]
      Para_active : Byte := BYTE#16#FF;   // Parameters which BEA active
   END_VAR

   VAR_OUTPUT 
      "Group OK" : Bool;   // Group IK
      "Group NOK" : Bool;   // Group NOK
      "Group Mounting Fault" : Bool;   // Group Mounting error active
      "Deselection available" : Bool;   // Choice available
      "Hand OK available" : Bool;   // HIO available
      "Retry after NOK active" : Bool;   // Repeat to NIO selected
   END_VAR

   VAR_IN_OUT 
      DB_Operator_Screen : "TypeProcessScreen";   // DB Worker's picture
      Reset : Bool;   // Reset (WT entlassen)
      Release_Hand_OK : Bool := TRUE;   // Enable editing mode for HIO
      Release_Deselection : Bool := TRUE;   // Enable editing mode for deselection
      Release_Enable : Bool := TRUE;   // Enable editing mode for selection
      Reset_Hand_OK : Bool;   // Reset HIO BEA
      Reset_Deselection : Bool;   // Reset deselection BEA
      BEA_0_Finished : Bool;   // Editing FM
      BEA_0_OK : Bool;   // Processing OK
      BEA_0_NOK : Bool;   // Processing NOK
      BEA_1_Finished : Bool;   // Editing FM
      BEA_1_OK : Bool;   // Processing OK
      BEA_1_NOK : Bool;   // Processing NOK
      BEA_2_Finished : Bool;   // Editing FM
      BEA_2_OK : Bool;   // Processing OK
      BEA_2_NOK : Bool;   // Processing NOK
      BEA_3_Finished : Bool;   // Editing FM
      BEA_3_OK : Bool;   // Processing OK
      BEA_3_NOK : Bool;   // Processing NOK
      BEA_4_Finished : Bool;   // Editing FM
      BEA_4_OK : Bool;   // Processing OK
      BEA_4_NOK : Bool;   // Processing NOK
      BEA_5_Finished : Bool;   // Editing FM
      BEA_5_OK : Bool;   // Processing OK
      BEA_5_NOK : Bool;   // Processing NOK
      BEA_6_Finished : Bool;   // Editing FM
      BEA_6_OK : Bool;   // Processing OK
      BEA_6_NOK : Bool;   // Processing NOK
      BEA_7_Finished : Bool;   // Editing FM
      BEA_7_OK : Bool;   // Processing OK
      BEA_7_NOK : Bool;   // Processing NOK
   END_VAR

   VAR RETAIN
      BEA0 : Struct
         active : Bool;   // Processing occupied
         OK : Bool;   // Processing OK
         NOK : Bool;   // Processing NOK
         deselect : Bool;   // Processing deselected
         HOK : Bool;   // Machining Hand OK
         Reset_HOK : Bool;   // Flank Reset Hand OK
         Res_6 : Bool;
         Res_7 : Bool;
         act_BEA : Bool;   // Current processing
         OP_OK : Bool;   // Condition OK
         config_Des : Bool := TRUE;   // Deselection button possible
         config_HOK : Bool := TRUE;   // Manual button OK possible
         FM_Zy2 : Bool;   // FM for next BEA
      END_STRUCT;
      BEA1 : Struct
         active : Bool;   // Processing occupied
         OK : Bool;   // Processing OK
         NOK : Bool;   // Processing NOK
         deselect : Bool;   // Processing deselected
         HOK : Bool;   // Machining Hand OK
         Reset_HOK : Bool;   // Flank Reset Hand OK
         Res_6 : Bool;
         Res_7 : Bool;
         act_BEA : Bool;   // Current processing
         OP_OK : Bool;   // Condition OK
         config_Des : Bool := TRUE;   // Deselection button possible
         config_HOK : Bool := TRUE;   // Manual button OK possible
         FM_Zy2 : Bool;   // FM for next BEA
      END_STRUCT;
      BEA2 : Struct
         active : Bool;   // Processing occupied
         OK : Bool;   // Processing OK
         NOK : Bool;   // Processing NOK
         deselect : Bool;   // Processing deselected
         HOK : Bool;   // Machining Hand OK
         Reset_HOK : Bool;   // Flank Reset Hand OK
         Res_6 : Bool;
         Res_7 : Bool;
         act_BEA : Bool;   // Current processing
         OP_OK : Bool;   // Condition OK
         config_Des : Bool := TRUE;   // Deselection button possible
         config_HOK : Bool := TRUE;   // Manual button OK possible
         FM_Zy2 : Bool;   // FM for next BEA
      END_STRUCT;
      BEA3 : Struct
         active : Bool;   // Processing occupied
         OK : Bool;   // Processing OK
         NOK : Bool;   // Processing NOK
         deselect : Bool;   // Processing deselected
         HOK : Bool;   // Machining Hand OK
         Reset_HOK : Bool;   // Flank Reset Hand OK
         Res_6 : Bool;
         Res_7 : Bool;
         act_BEA : Bool;   // Current processing
         OP_OK : Bool;   // Condition OK
         config_Des : Bool := TRUE;   // Deselection button possible
         config_HOK : Bool := TRUE;   // Manual button OK possible
         FM_Zy2 : Bool;   // FM for next BEA
      END_STRUCT;
      BEA4 : Struct
         active : Bool;   // Processing occupied
         OK : Bool;   // Processing OK
         NOK : Bool;   // Processing NOK
         deselect : Bool;   // Processing deselected
         HOK : Bool;   // Machining Hand OK
         Reset_HOK : Bool;   // Flank Reset Hand OK
         Res_6 : Bool;
         Res_7 : Bool;
         act_BEA : Bool;   // Current processing
         OP_OK : Bool;   // Condition OK
         config_Des : Bool := TRUE;   // Deselection button possible
         config_HOK : Bool := TRUE;   // Manual button OK possible
         FM_Zy2 : Bool;   // FM for next BEA
      END_STRUCT;
      BEA5 : Struct
         active : Bool;   // Processing occupied
         OK : Bool;   // Processing OK
         NOK : Bool;   // Processing NOK
         deselect : Bool;   // Processing deselected
         HOK : Bool;   // Machining Hand OK
         Reset_HOK : Bool;   // Flank Reset Hand OK
         Res_6 : Bool;
         Res_7 : Bool;
         act_BEA : Bool;   // Current processing
         OP_OK : Bool;   // Condition OK
         config_Des : Bool := TRUE;   // Deselection button possible
         config_HOK : Bool := TRUE;   // Manual button OK possible
         FM_Zy2 : Bool;   // FM for next BEA
      END_STRUCT;
      BEA6 : Struct
         active : Bool;   // Processing occupied
         OK : Bool;   // Processing OK
         NOK : Bool;   // Processing NOK
         deselect : Bool;   // Processing deselected
         HOK : Bool;   // Machining Hand OK
         Reset_HOK : Bool;   // Flank Reset Hand OK
         Res_6 : Bool;
         Res_7 : Bool;
         act_BEA : Bool;   // Current processing
         OP_OK : Bool;   // Condition OK
         config_Des : Bool := TRUE;   // Deselection button possible
         config_HOK : Bool := TRUE;   // Manual button OK possible
         FM_Zy2 : Bool;   // FM for next BEA
      END_STRUCT;
      BEA7 : Struct
         active : Bool;   // Processing occupied
         OK : Bool;   // Processing OK
         NOK : Bool;   // Processing NOK
         deselect : Bool;   // Processing deselected
         HOK : Bool;   // Machining Hand OK
         Reset_HOK : Bool;   // Flank Reset Hand OK
         Res_6 : Bool;
         Res_7 : Bool;
         act_BEA : Bool;   // Current processing
         OP_OK : Bool;   // Condition OK
         config_Des : Bool := TRUE;   // Deselection button possible
         config_HOK : Bool := TRUE;   // Manual button OK possible
         FM_Zy2 : Bool;   // FM for next BEA
      END_STRUCT;
      SS : Struct
         BEA : Array[0..7] of Struct
            _Finish : Bool;   // Editing FM
            _OK : Bool;   // Processing OK
            _NOK : Bool;   // Processing NOK
            _act : Bool;   // Current processing
            _OP_OK : Bool;   // Processing condition OK
            _FMNext : Bool;   // FM for next BEA
            _Deselected : Bool;   // Processing is deselected
            _HOK : Bool;   // Machining was set to HIO
         END_STRUCT;
      END_STRUCT;
      Flow_Indicator : Byte := BYTE#16#01;   // Flow meter
      First_Lamp : Int;
      Last_Lamp : Int;
      actual_BEA_intern : Int;
      Edit_Select_MP270 : Int;
      Edit_Active_MP270 : Int;
      Edit_active : Bool;
      Edit_active_BEA : Array[0..7] of Bool;
      pf_T_Deselect : Bool;
      hm_pf_T_Deselect : Bool;
      pf_T_Hand_OK : Bool;
      hm_pf_T_Hand_OK : Bool;
      pf_T_Overwrite : Bool;
      hm_pf_T_Overwirte : Bool;
      pf_T_Cancel : Bool;
      hm_pf_T_Cancel : Bool;
      pf_Edit_active : Bool;
      hm_pf_Edit_Active : Bool;
      Edit_Hand_OK : Bool;
      Edit_deselect : Bool;
      pf_Retry_NOK : Bool;
      hm_pf_Retry_NOK : Bool;
      pf_Reset_Hand_OK : Bool;
      hm_pf_Reset_Hand_OK : Bool;
      pf_Reset_Des : Bool;
      hm_pf_Reset_Des : Bool;
   END_VAR

   VAR_TEMP 
      BEA_int : Struct
         belegt : Bool;   // Processing occupied
         IO : Bool;   // Processing OK
         NIO : Bool;   // Processing NOK
         abgew : Bool;   // Processing deselected
         HIO : Bool;   // Machining Hand OK
         Reset_HIO : Bool;   // Flank Reset Hand OK
         Res_6 : Bool;
         Res_7 : Bool;
         akt_BEA : Bool;   // Current processing
         Bed_IO : Bool;   // Condition OK
         config_Abw : Bool;   // Deselection button possible
         config_HIO : Bool;   // Manual button OK possible
         FM_Zy2 : Bool;   // FM for next BEA
      END_STRUCT;
      t_RetVal_SFC : Int;
      t_Loop : Int;
      t_Counter : Int;
      t_Index : Int;
      t_Lamp_Nr : Array[1..8] of Int;
   END_VAR


BEGIN
	REGION _Logbuch_
	    
	    // ==============================================================================+
	    // Logbuch                                                                       +
	    // ------------------------------------------------------------------------------+
	    // 01.12.2017  Umstellung auf TIA                                                +
	    //                                                                               +
	    // ==============================================================================+
	    
	    
	    // ==============================================================================+
	    // Funktion                                                                      +
	    // ------------------------------------------------------------------------------+
	    // Der Baustein Verwaltet eine GRUPPE (8 Einzel-BEA)im Prozessbild               +
	    //                                                                               +
	    // -Die Ampeln sind fest zugeordnet [Gruppe 0 = Ampel 1-8]                       +
	    // [Gruppe 1 = Ampel 9-16] usw.                                                  +
	    // +                                                                             +
	    // -Bei Anwahl "Bearbeitung Wiederholen" werden die Fertigmeldungen              +
	    // Der NIO-Bearbeitungen gelöscht.                                               +
	    // ==============================================================================+
	    
	    
	    // ==============================================================================+
	    // IN-Parameterbeschreibung                                                      +
	    // ------------------------------------------------------------------------------+
	    // Typ      Name                   Beschreibung                                  +
	    // ------------------------------------------------------------------------------+
	    // DB       DB_Wekerbild           Datenbaustein Werkerbild                      +
	    // INT      BEA_Gruppe             Nummer der Bearbeitungsgruppe (0...7)         +
	    // BOOL     Reset                  Rücksetzen der Bearbeitungsergebnisse         +
	    // BOOL     Freig_Hand_io          Funktionsfreigabe "Hand IO"                   +
	    // BOOL     Freig_Abwahl           Funktionsfreigabe "Abwahl"                    +
	    // BYTE     Para_aktiv             Parameter welche der 8 möglichen              +
	    //                                 BEA aktiv sind.                               +
	    //                                 z.B. B#16#01 = BEA 0                          +
	    //                                 B#16#03 = BEA 0+1                             +
	    //                                 B#16#07 = BEA 0+1+2                           +
	    //                                 B#16#FF = BEA 0 bis 7                         +
	    // ==============================================================================+
	    
	    
	    // ==============================================================================+
	    // OUT-Parameterbeschreibung                                                     +
	    // ------------------------------------------------------------------------------+
	    // Typ      Name                    Beschreibung                                 +
	    // ------------------------------------------------------------------------------+
	    // BOOL     Gruppe_IO               alle aktiven BEA sind IO                     +
	    // BOOL     Gruppe_NIO              min. eine aktive BEA ist NIO                 +
	    // BOOL     Abwahl_vorhanden        min. eine BEA abgewaehlt                     +
	    // BOOL     HIO_vorhanden           min. eine BEA "Hand IO" gesetzt              +
	    // ==============================================================================+
	    
	    // ==============================================================================+
	    // IN_OUT-Parameterbeschreibung                                                  +
	    // ------------------------------------------------------------------------------+
	    // Typ      Name                    Beschreibung                                 +
	    // ------------------------------------------------------------------------------+
	    // BOOL     BEA_0_FM                "BEA 0" Fertig                               +
	    // BOOL     BEA_0_IO                "BEA 0" IO                                   +
	    // BOOL     BEA_0_NIO               "BEA 0" NIO                                  +
	    // BOOL     BEA_1_FM                "BEA 1" Fertig                               +
	    // BOOL     BEA_1_IO                "BEA 1" IO                                   +
	    // BOOL     BEA_1_NIO               "BEA 1" NIO                                  +
	    // BOOL     BEA_2_FM                "BEA 2" Fertig                               +
	    // BOOL     BEA_2_IO                "BEA 2" IO                                   +
	    // BOOL     BEA_2_NIO               "BEA 2" NIO                                  +
	    // BOOL     BEA_3_FM                "BEA 3" Fertig                               +
	    // BOOL     BEA_3_IO                "BEA 3" IO                                   +
	    // BOOL     BEA_3_NIO               "BEA 3" NIO                                  +
	    // BOOL     BEA_4_FM                "BEA 4" Fertig                               +
	    // BOOL     BEA_4_IO                "BEA 4" IO                                   +
	    // BOOL     BEA_4_NIO               "BEA 4" NIO                                  +
	    // BOOL     BEA_5_FM                "BEA 5" Fertig                               +
	    // BOOL     BEA_5_IO                "BEA 5" IO                                   +
	    // BOOL     BEA_5_NIO               "BEA 5" NIO                                  +
	    // BOOL     BEA_6_FM                "BEA 6" Fertig                               +
	    // BOOL     BEA_6_IO                "BEA 6" IO                                   +
	    // BOOL     BEA_6_NIO               "BEA 6" NIO                                  +
	    // BOOL     BEA_7_FM                "BEA 7" Fertig                               +
	    // BOOL     BEA_7_IO                "BEA 7" IO                                   +
	    // BOOL     BEA_7_NIO               "BEA 7" NIO                                  +
	    // ==============================================================================+
	    
	END_REGION
	
	
	REGION _Schnittstelle Einlesen_
	    // Schnittstelle (IN/OUT) Einlesen
	    
	    //--BEA0--
	    #SS.BEA[0]._Finish := #BEA_0_Finished;
	    #SS.BEA[0]._OK := #BEA_0_OK;
	    #SS.BEA[0]._NOK := #BEA_0_NOK;
	    
	    //--BEA1--
	    #SS.BEA[1]._Finish := #BEA_1_Finished;
	    #SS.BEA[1]._OK := #BEA_1_OK;
	    #SS.BEA[1]._NOK := #BEA_1_NOK;
	    
	    //--BEA2--
	    #SS.BEA[2]._Finish := #BEA_2_Finished;
	    #SS.BEA[2]._OK := #BEA_2_OK;
	    #SS.BEA[2]._NOK := #BEA_2_NOK;
	    
	    //--BEA3--
	    #SS.BEA[3]._Finish := #BEA_3_Finished;
	    #SS.BEA[3]._OK := #BEA_3_OK;
	    #SS.BEA[3]._NOK := #BEA_3_NOK;
	    
	    //--BEA4--
	    #SS.BEA[4]._Finish := #BEA_4_Finished;
	    #SS.BEA[4]._OK := #BEA_4_OK;
	    #SS.BEA[4]._NOK := #BEA_4_NOK;
	    
	    //--BEA5--
	    #SS.BEA[5]._Finish := #BEA_5_Finished;
	    #SS.BEA[5]._OK := #BEA_5_OK;
	    #SS.BEA[5]._NOK := #BEA_5_NOK;
	    
	    //--BEA6--
	    #SS.BEA[6]._Finish := #BEA_6_Finished;
	    #SS.BEA[6]._OK := #BEA_6_OK;
	    #SS.BEA[6]._NOK := #BEA_6_NOK;
	    
	    //--BEA7--
	    #SS.BEA[7]._Finish := #BEA_7_Finished;
	    #SS.BEA[7]._OK := #BEA_7_OK;
	    #SS.BEA[7]._NOK := #BEA_7_NOK;
	    
	END_REGION
	REGION _Edit Einlesen_
	    #Edit_Select_MP270 := #DB_Operator_Screen.GENERAL.Lamp_Nr;
	    #Edit_Active_MP270 := #DB_Operator_Screen.EDIT.Lamp_Nr;
	END_REGION
	REGION _Ampeln aktivieren_
	    // Ampeln der Gruppe bestimmen
	    #t_Lamp_Nr[1] := (#BEA_Group * 8 + 1);
	    #t_Lamp_Nr[2] := (#BEA_Group * 8 + 2);
	    #t_Lamp_Nr[3] := (#BEA_Group * 8 + 3);
	    #t_Lamp_Nr[4] := (#BEA_Group * 8 + 4);
	    #t_Lamp_Nr[5] := (#BEA_Group * 8 + 5);
	    #t_Lamp_Nr[6] := (#BEA_Group * 8 + 6);
	    #t_Lamp_Nr[7] := (#BEA_Group * 8 + 7);
	    #t_Lamp_Nr[8] := (#BEA_Group * 8 + 8);
	    #First_Lamp := #t_Lamp_Nr[1];
	    #Last_Lamp := #t_Lamp_Nr[8];
	    
	    // Ampeln aktivieren
	    #DB_Operator_Screen.LAMP[#t_Lamp_Nr[1]].fade_in := #Para_active.%X0;
	    #DB_Operator_Screen.LAMP[#t_Lamp_Nr[2]].fade_in := #Para_active.%X1;
	    #DB_Operator_Screen.LAMP[#t_Lamp_Nr[3]].fade_in := #Para_active.%X2;
	    #DB_Operator_Screen.LAMP[#t_Lamp_Nr[4]].fade_in := #Para_active.%X3;
	    #DB_Operator_Screen.LAMP[#t_Lamp_Nr[5]].fade_in := #Para_active.%X4;
	    #DB_Operator_Screen.LAMP[#t_Lamp_Nr[6]].fade_in := #Para_active.%X5;
	    #DB_Operator_Screen.LAMP[#t_Lamp_Nr[7]].fade_in := #Para_active.%X6;
	    #DB_Operator_Screen.LAMP[#t_Lamp_Nr[8]].fade_in := #Para_active.%X7;
	    
	    //--Abwahl extern--
	    #BEA0.deselect := #BEA0.deselect OR #DB_Operator_Screen.ABWAHL_EXT[#BEA_Group * 8 + 1];
	    #BEA1.deselect := #BEA1.deselect OR #DB_Operator_Screen.ABWAHL_EXT[#BEA_Group * 8 + 2];
	    #BEA2.deselect := #BEA2.deselect OR #DB_Operator_Screen.ABWAHL_EXT[#BEA_Group * 8 + 3];
	    #BEA3.deselect := #BEA3.deselect OR #DB_Operator_Screen.ABWAHL_EXT[#BEA_Group * 8 + 4];
	    #BEA4.deselect := #BEA4.deselect OR #DB_Operator_Screen.ABWAHL_EXT[#BEA_Group * 8 + 5];
	    #BEA5.deselect := #BEA5.deselect OR #DB_Operator_Screen.ABWAHL_EXT[#BEA_Group * 8 + 6];
	    #BEA6.deselect := #BEA6.deselect OR #DB_Operator_Screen.ABWAHL_EXT[#BEA_Group * 8 + 7];
	    #BEA7.deselect := #BEA7.deselect OR #DB_Operator_Screen.ABWAHL_EXT[#BEA_Group * 8 + 8];
	  
	END_REGION
	REGION _Editbereich öffnen_
	    IF (#Edit_Active_MP270 = 0) AND
	        (#Edit_Select_MP270 >= #First_Lamp) AND
	        (#Edit_Select_MP270 <= #Last_Lamp) THEN
	        
	        #Edit_Active_MP270 := #Edit_Select_MP270;
	    END_IF;
	    
	    
	END_REGION
	REGION _Was wird Editiert?_
	    // INIT
	    #Edit_active := FALSE;
	    #actual_BEA_intern := 0;
	    
	    // welche BEA wird Editiert?
	    #Edit_active_BEA[0] := (#t_Lamp_Nr[1] = #Edit_Active_MP270);
	    #Edit_active_BEA[1] := (#t_Lamp_Nr[2] = #Edit_Active_MP270);
	    #Edit_active_BEA[2] := (#t_Lamp_Nr[3] = #Edit_Active_MP270);
	    #Edit_active_BEA[3] := (#t_Lamp_Nr[4] = #Edit_Active_MP270);
	    #Edit_active_BEA[4] := (#t_Lamp_Nr[5] = #Edit_Active_MP270);
	    #Edit_active_BEA[5] := (#t_Lamp_Nr[6] = #Edit_Active_MP270);
	    #Edit_active_BEA[6] := (#t_Lamp_Nr[7] = #Edit_Active_MP270);
	    #Edit_active_BEA[7] := (#t_Lamp_Nr[8] = #Edit_Active_MP270);
	    
	    
	    // Edit aktivieren
	    IF #Edit_active_BEA[0] THEN
	    #actual_BEA_intern := 0;
	    #BEA_int := #BEA0;
	    #Edit_active := TRUE;
	    
	ELSIF #Edit_active_BEA[1] THEN
	    #actual_BEA_intern := 1;
	    #BEA_int := #BEA1;
	    #Edit_active := TRUE;
	    
	ELSIF #Edit_active_BEA[2] THEN
	    #actual_BEA_intern := 2;
	    #BEA_int := #BEA2;
	    #Edit_active := TRUE;
	    
	ELSIF #Edit_active_BEA[3] THEN
	    #actual_BEA_intern := 3;
	    #BEA_int := #BEA3;
	    #Edit_active := TRUE;
	    
	ELSIF #Edit_active_BEA[4] THEN
	    #actual_BEA_intern := 4;
	    #BEA_int := #BEA4;
	    #Edit_active := TRUE;
	    
	ELSIF #Edit_active_BEA[5] THEN
	    #actual_BEA_intern := 5;
	    #BEA_int := #BEA5;
	    #Edit_active := TRUE;
	    
	ELSIF #Edit_active_BEA[6] THEN
	    #actual_BEA_intern := 6;
	    #BEA_int := #BEA6;
	    #Edit_active := TRUE;
	    
	ELSIF #Edit_active_BEA[7] THEN
	    #actual_BEA_intern := 7;
	    #BEA_int := #BEA7;
	    #Edit_active := TRUE;
	ELSE
	    #actual_BEA_intern := 0;
	    #Edit_active := false;
	    ;
	END_IF;
	END_REGION
	REGION _Tasten im Editierbereich_
	    // INIT Reset HIO
	    #BEA0.Reset_HOK := FALSE;
	    #BEA1.Reset_HOK := FALSE;
	    #BEA2.Reset_HOK := FALSE;
	    #BEA3.Reset_HOK := FALSE;
	    #BEA4.Reset_HOK := FALSE;
	    #BEA5.Reset_HOK := FALSE;
	    #BEA6.Reset_HOK := FALSE;
	    #BEA7.Reset_HOK := FALSE;
	    
	    IF #Edit_active THEN
	        
	        // Tasten einblenden
	        #DB_Operator_Screen.EDIT.active := TRUE;
	        #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.fade_in := TRUE;
	        #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.fade_in := true;
	        #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.fade_in := true;
	        #DB_Operator_Screen.EDIT.BUTTON_CANCEL.fade_in := true;
	        #DB_Operator_Screen.EDIT.BUTTON_CANCEL.executable := true;
	        
	        // Taste Abwahl Freigeben
	        #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.executable := (#Release_Deselection AND #BEA_int.config_Abw) OR
	        (#Release_Enable AND #BEA_int.config_Abw AND #Edit_deselect);
	        
	        // Taste Hand IO Freigeben
	        #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.executable := (#Release_Hand_OK AND #BEA_int.config_HIO);
	        
	        // Taste Übernahme Freigeben
	        #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.executable := (#Release_Deselection OR #Release_Hand_OK OR #Release_Enable);
	        
	        // Auswertung Taste Abwählen
	        #pf_T_Deselect := (#DB_Operator_Screen.EDIT.BUTTON_DESELECTION.operated AND #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.executable);
	        #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.operated := false;
	        
	        // Auswertung Taste HIO
	        #pf_T_Hand_OK := (#DB_Operator_Screen.EDIT.BUTTON_HAND_OK.operated AND #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.executable);
	        #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.operated := false;
	        
	        // Auswertung Taste Übernahme
	        #pf_T_Overwrite := (#DB_Operator_Screen.EDIT.BUTTON_ACCEPT.operated AND #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.executable);
	        #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.operated := false;
	        
	        // Auswertung Taste Abbrechen
	        #pf_T_Cancel := #DB_Operator_Screen.EDIT.BUTTON_CANCEL.operated ;
	        #DB_Operator_Screen.EDIT.BUTTON_CANCEL.operated := false;
	        
	        
	        // Gestaltung Taste-Abwahl am HMI
	        IF #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.function_active
	            AND #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.executable THEN
	            #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.Formation := 3;       // aktiv + ausführbar
	        ELSIF #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.function_active THEN
	            #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.Formation := 2;       // aktiv
	        ELSIF #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.executable THEN
	            #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.Formation := 1;       // ausführbar
	        ELSE
	            #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.Formation := 0;       // gesperrt
	        END_IF;
	        
	        // Gestaltung Taste-Hand-IO am HMI
	        IF #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.function_active
	            AND #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.executable THEN
	            #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.Formation := 3;       // aktiv + ausführbar
	        ELSIF #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.function_active THEN
	            #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.Formation := 2;       // aktiv
	        ELSIF #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.executable THEN
	            #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.Formation := 1;       // ausführbar
	        ELSE
	            #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.Formation := 0;       // gesperrt
	        END_IF;
	        
	        // Gestaltung Taste-Übernehmen am HMI
	        IF #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.function_active
	            AND #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.executable THEN
	            #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.Formation := 3;       // aktiv + ausführbar
	        ELSIF #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.function_active THEN
	            #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.Formation := 2;       // aktiv
	        ELSIF #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.executable THEN
	            #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.Formation := 1;       // ausführbar
	        ELSE
	            #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.Formation := 0;       // gesperrt
	        END_IF;
	        
	        // Gestaltung Taste-Abbrechen am HMI
	        IF #DB_Operator_Screen.EDIT.BUTTON_CANCEL.function_active
	            AND #DB_Operator_Screen.EDIT.BUTTON_CANCEL.executable THEN
	            #DB_Operator_Screen.EDIT.BUTTON_CANCEL.Formation := 3;       // aktiv + ausführbar
	        ELSIF #DB_Operator_Screen.EDIT.BUTTON_CANCEL.function_active THEN
	            #DB_Operator_Screen.EDIT.BUTTON_CANCEL.Formation := 2;       // aktiv
	        ELSIF #DB_Operator_Screen.EDIT.BUTTON_CANCEL.executable THEN
	            #DB_Operator_Screen.EDIT.BUTTON_CANCEL.Formation := 1;       // ausführbar
	        ELSE
	            #DB_Operator_Screen.EDIT.BUTTON_CANCEL.Formation := 0;       // gesperrt
	        END_IF;
	        
	    END_IF;
	END_REGION
	REGION _Editbereich aktualisieren und Auswerten_
	    // Flanke Edit aktiv
	    #pf_Edit_active := (#Edit_active AND NOT #hm_pf_Edit_Active);
	    #hm_pf_Edit_Active := #Edit_active;
	    
	    // Aktuell in Edit
	    IF #pf_Edit_active THEN
	        #Edit_Hand_OK := #BEA_int.HIO;
	        #Edit_deselect := #BEA_int.abgew;
	    END_IF;
	    
	    // Taste-Abwahl Auswerten
	    IF #pf_T_Deselect AND #Edit_active THEN
	        #Edit_deselect := NOT #Edit_deselect;
	    END_IF;
	    
	    // Taste-HIO Auswerten
	    IF #pf_T_Hand_OK AND #Edit_active THEN
	        #Edit_Hand_OK := NOT #Edit_Hand_OK;
	    END_IF;
	    
	    // Edit in Aktuell
	    IF #pf_T_Overwrite THEN
	        #BEA_int.Reset_HIO := (#BEA_int.HIO AND NOT #Edit_Hand_OK); // Flanke Reset HIO
	        #BEA_int.HIO := #Edit_Hand_OK;
	        #BEA_int.abgew := #Edit_deselect;
	        
	        IF #Edit_active_BEA[0] THEN
	            #BEA0 := #BEA_int;
	        ELSIF #Edit_active_BEA[1] THEN
	            #BEA1 := #BEA_int;
	        ELSIF #Edit_active_BEA[2] THEN
	            #BEA2 := #BEA_int;
	        ELSIF #Edit_active_BEA[3] THEN
	            #BEA3 := #BEA_int;
	        ELSIF #Edit_active_BEA[4] THEN
	            #BEA4 := #BEA_int;
	        ELSIF #Edit_active_BEA[5] THEN
	            #BEA5 := #BEA_int;
	        ELSIF #Edit_active_BEA[6] THEN
	            #BEA6 := #BEA_int;
	        ELSIF #Edit_active_BEA[7] THEN
	            #BEA7 := #BEA_int;
	        END_IF;
	    END_IF;
	    
	    
	END_REGION
	REGION _Editierbereich schliessen_
	    IF (#pf_T_Overwrite OR #pf_T_Cancel) AND (#Edit_active) THEN
	        
	        #DB_Operator_Screen.EDIT.Lamp_Nr := 0;
	        #DB_Operator_Screen.EDIT.active := false;
	        
	        // Taste Abwahl
	        #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.fade_in := false;
	        #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.operated:= false;
	        #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.executable := false;
	        #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.function_active := false;
	        
	        // Taste HIO
	        #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.fade_in := false;
	        #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.operated := false;
	        #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.executable := false;
	        #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.function_active := false;
	    
	        // Taste Übernehmen
	        #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.fade_in := false;
	        #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.operated := false;
	        #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.executable := false;
	        #DB_Operator_Screen.EDIT.BUTTON_ACCEPT.function_active := false;
	        
	        // Taste Abbrechen
	        #DB_Operator_Screen.EDIT.BUTTON_CANCEL.fade_in := false;
	        #DB_Operator_Screen.EDIT.BUTTON_CANCEL.operated := false;
	        #DB_Operator_Screen.EDIT.BUTTON_CANCEL.executable := false;
	        #DB_Operator_Screen.EDIT.BUTTON_CANCEL.function_active := false;
	        
	        // Anwahlen Reset
	        #Edit_Select_MP270 := 0;
	        #Edit_Active_MP270 := 0;
	        
	        #Edit_deselect := false;
	        #Edit_Hand_OK := FALSE;
	        #pf_T_Overwrite := false;
	        #pf_T_Cancel := false;
	        
	        
	    END_IF;
	    
	    
	END_REGION
	REGION _Wiederholen nach NIO_
	    // Zähler Reset
	    IF #Reset THEN
	        #Flow_Indicator := 1;
	    END_IF;
	    
	    // Flanke Wiederholen nach NIO
	    #pf_Retry_NOK := (#DB_Operator_Screen.BUTTON_REPEAT_NOK.function_active AND NOT #hm_pf_Retry_NOK);
	    #hm_pf_Retry_NOK := #DB_Operator_Screen.BUTTON_REPEAT_NOK.function_active;
	    
	    // Wiederholung erforderlich?
	    #"Retry after NOK active" := #pf_Retry_NOK AND (#BEA0.NOK OR #BEA1.NOK OR #BEA2.NOK OR #BEA3.NOK OR #BEA4.NOK OR #BEA5.NOK OR #BEA6.NOK OR #BEA7.NOK);
	    
	    // BEA0 - FM ablöschen
	    IF #"Retry after NOK active" AND #BEA0.NOK THEN
	        #SS.BEA[0]._Finish := false;
	        #SS.BEA[0]._OK := false;
	        #SS.BEA[0]._NOK := false;
	    END_IF;
	    
	    // BEA1 - FM ablöschen
	    IF #"Retry after NOK active" AND #BEA1.NOK THEN
	        #SS.BEA[1]._Finish := false;
	        #SS.BEA[1]._OK := false;
	        #SS.BEA[1]._NOK := false;
	    END_IF;
	    
	    // BEA2 - FM ablöschen
	    IF #"Retry after NOK active" AND #BEA2.NOK THEN
	        #SS.BEA[2]._Finish := false;
	        #SS.BEA[2]._OK := false;
	        #SS.BEA[2]._NOK := false;
	    END_IF;
	    
	    // BEA3 - FM ablöschen
	    IF #"Retry after NOK active" AND #BEA3.NOK THEN
	        #SS.BEA[3]._Finish := false;
	        #SS.BEA[3]._OK := false;
	        #SS.BEA[3]._NOK := false;
	    END_IF;
	    
	    // BEA4 - FM ablöschen
	    IF #"Retry after NOK active" AND #BEA4.NOK THEN
	        #SS.BEA[4]._Finish := false;
	        #SS.BEA[4]._OK := false;
	        #SS.BEA[4]._NOK := false;
	    END_IF;
	    
	    // BEA5 - FM ablöschen
	    IF #"Retry after NOK active" AND #BEA5.NOK THEN
	        #SS.BEA[5]._Finish := false;
	        #SS.BEA[5]._OK := false;
	        #SS.BEA[5]._NOK := false;
	    END_IF;
	    
	    // BEA6 - FM ablöschen
	    IF #"Retry after NOK active" AND #BEA6.NOK THEN
	        #SS.BEA[6]._Finish := false;
	        #SS.BEA[6]._OK := false;
	        #SS.BEA[6]._NOK := false;
	    END_IF;
	    
	    // BEA7 - FM ablöschen
	    IF #"Retry after NOK active" AND #BEA7.NOK THEN
	        #SS.BEA[7]._Finish := false;
	        #SS.BEA[7]._OK := false;
	        #SS.BEA[7]._NOK := false;
	    END_IF;
	    
	    // Durchlaufzähler erhöhen
	    IF #"Retry after NOK active" THEN
	        #Flow_Indicator := #Flow_Indicator + 1;
	    END_IF;
	    
	END_REGION
	REGION _Arbeitsanweisung_
	// Zeiger Einlesen
	    #t_Counter := #DB_Operator_Screen.WorkInstr.Intern."Pointer";
	    
	// BEA0 - Arbeitsanweisung    
	    IF #SS.BEA[0]._act AND (#t_Counter < 16) THEN
	        #DB_Operator_Screen.WorkInstr.Intern.Index[#t_Counter] := #t_Lamp_Nr[1];
	        #t_Counter := #t_Counter + 1;
	    END_IF;
	    
	    // BEA0 - Arbeitsanweisung    
	    IF #SS.BEA[0]._act AND (#t_Counter < 16) THEN
	        #DB_Operator_Screen.WorkInstr.Intern.Index[#t_Counter] := #t_Lamp_Nr[1];
	        #t_Counter := #t_Counter + 1;
	    END_IF;
	    
	    // BEA1 - Arbeitsanweisung    
	    IF #SS.BEA[1]._act AND (#t_Counter < 16) THEN
	        #DB_Operator_Screen.WorkInstr.Intern.Index[#t_Counter] := #t_Lamp_Nr[2];
	        #t_Counter := #t_Counter + 1;
	    END_IF;
	    
	    // BEA2 - Arbeitsanweisung    
	    IF #SS.BEA[2]._act AND (#t_Counter < 16) THEN
	        #DB_Operator_Screen.WorkInstr.Intern.Index[#t_Counter] := #t_Lamp_Nr[3];
	        #t_Counter := #t_Counter + 1;
	    END_IF;
	    
	    // BEA3 - Arbeitsanweisung    
	    IF #SS.BEA[3]._act AND (#t_Counter < 16) THEN
	        #DB_Operator_Screen.WorkInstr.Intern.Index[#t_Counter] := #t_Lamp_Nr[4];
	        #t_Counter := #t_Counter + 1;
	    END_IF;
	    
	    // BEA4 - Arbeitsanweisung    
	    IF #SS.BEA[4]._act AND (#t_Counter < 16) THEN
	        #DB_Operator_Screen.WorkInstr.Intern.Index[#t_Counter] := #t_Lamp_Nr[5];
	        #t_Counter := #t_Counter + 1;
	    END_IF;
	    
	    // BEA5 - Arbeitsanweisung    
	    IF #SS.BEA[5]._act AND (#t_Counter < 16) THEN
	        #DB_Operator_Screen.WorkInstr.Intern.Index[#t_Counter] := #t_Lamp_Nr[6];
	        #t_Counter := #t_Counter + 1;
	    END_IF;
	    
	    // BEA6 - Arbeitsanweisung    
	    IF #SS.BEA[6]._act AND (#t_Counter < 16) THEN
	        #DB_Operator_Screen.WorkInstr.Intern.Index[#t_Counter] := #t_Lamp_Nr[7];
	        #t_Counter := #t_Counter + 1;
	    END_IF;
	    
	    // BEA7 - Arbeitsanweisung    
	    IF #SS.BEA[7]._act AND (#t_Counter < 16) THEN
	        #DB_Operator_Screen.WorkInstr.Intern.Index[#t_Counter] := #t_Lamp_Nr[8];
	        #t_Counter := #t_Counter + 1;
	    END_IF;
	    
	    // Zeiger Ausgeben
	    #DB_Operator_Screen.WorkInstr.Intern."Pointer" := #t_Counter;
	    
	END_REGION
	REGION _Flanken_Auswertung_
	    // Flanke Reset HIO
	    #pf_Reset_Hand_OK := (#Reset_Hand_OK AND NOT #hm_pf_Reset_Hand_OK);
	    #hm_pf_Reset_Hand_OK := #Reset_Hand_OK;
	    
	    // Flanke Abwahl
	    #pf_Reset_Des := (#Reset_Deselection AND NOT #hm_pf_Reset_Des);
	    #hm_pf_Reset_Des := #Reset_Deselection;
	    
	END_REGION
	REGION _BEA0 Auswerten_
	    // BEA0 - Auswerten
	    
	    // Reset
	    IF #Reset THEN
	        #SS.BEA[0]._OK := false;
	        #SS.BEA[0]._NOK := false;
	        #SS.BEA[0]._Finish := false;
	        #SS.BEA[0]._act := false;
	        #SS.BEA[0]._OP_OK := false;
	    END_IF;
	    
	    // Reset_HIO
	    IF #Reset AND NOT #BEA0.deselect THEN
	        #BEA0.HOK := false;
	    END_IF;
	    IF (#pf_Reset_Hand_OK AND #BEA0.HOK) OR #BEA0.Reset_HOK THEN
	        #SS.BEA[0]._OK := false;
	        #SS.BEA[0]._NOK := true;
	        #SS.BEA[0]._Finish := true;
	        #BEA0.HOK := false;
	    END_IF;
	    
	    // Reset Abwahl 
	    IF #pf_Reset_Des AND #BEA0.deselect THEN
	        #SS.BEA[0]._OK := false;
	        #SS.BEA[0]._NOK := true;
	        #SS.BEA[0]._Finish := true;
	        #BEA0.deselect := false;
	    END_IF;
	    
	    // Abgewählt 
	    IF #BEA0.deselect THEN
	        #SS.BEA[0]._OK := false;
	        #SS.BEA[0]._NOK := false;
	        #SS.BEA[0]._Finish := true;
	    END_IF;
	    
	    // Hand IO 
	    IF #BEA0.HOK THEN
	        #SS.BEA[0]._OK := TRUE;
	        #SS.BEA[0]._NOK := FALSE;
	        #SS.BEA[0]._Finish := true;
	    END_IF;
	    
	    // Auswertung IO 
	    #BEA0.OK := #SS.BEA[0]._Finish AND #SS.BEA[0]._OK AND NOT #SS.BEA[0]._NOK AND NOT #BEA0.HOK AND NOT #BEA0.deselect AND NOT #BEA0.NOK;
	    
	    // Auswertung NIO 
	    #BEA0.NOK := #SS.BEA[0]._Finish AND (#SS.BEA[0]._NOK OR NOT #SS.BEA[0]._OK) AND NOT #BEA0.HOK AND NOT #BEA0.deselect;
	    
	    // BEA aktuell
	    #BEA0.act_BEA := #SS.BEA[0]._act;
	    
	    // BEA belegt
	    #BEA0.active := #Para_active.%X0;
	END_REGION
	REGION _BEA1 Auswerten_
	    // BEA1 - Auswerten
	    
	    // Reset
	    IF #Reset THEN
	        #SS.BEA[1]._OK := false;
	        #SS.BEA[1]._NOK := false;
	        #SS.BEA[1]._Finish := false;
	        #SS.BEA[1]._act := false;
	        #SS.BEA[1]._OP_OK := false;
	    END_IF;
	    
	    // Reset_HIO
	    IF #Reset AND NOT #BEA1.deselect THEN
	        #BEA1.HOK := false;
	    END_IF;
	    IF (#pf_Reset_Hand_OK AND #BEA1.HOK) OR #BEA1.Reset_HOK THEN
	        #SS.BEA[1]._OK := false;
	        #SS.BEA[1]._NOK := true;
	        #SS.BEA[1]._Finish := true;
	        #BEA1.HOK := false;
	    END_IF;
	    
	    // Reset Abwahl 
	    IF #pf_Reset_Des AND #BEA1.deselect AND #SS.BEA[1]._Finish THEN
	        #SS.BEA[1]._OK := false;
	        #SS.BEA[1]._NOK := true;
	        #SS.BEA[1]._Finish := true;
	        #BEA1.deselect := false;
	    END_IF;
	    
	    // Abgewählt 
	    IF #BEA1.deselect THEN
	        #SS.BEA[1]._OK := false;
	        #SS.BEA[1]._NOK := false;
	        #SS.BEA[1]._Finish := true;
	    END_IF;
	    
	    // Hand IO 
	    IF #BEA1.HOK THEN
	        #SS.BEA[1]._OK := TRUE;
	        #SS.BEA[1]._NOK := FALSE;
	        #SS.BEA[1]._Finish := true;
	    END_IF;
	    
	    // Auswertung IO 
	    #BEA1.OK := #SS.BEA[1]._Finish AND #SS.BEA[1]._OK AND NOT #SS.BEA[1]._NOK AND NOT #BEA1.HOK AND NOT #BEA1.deselect AND NOT #BEA1.NOK;
	    
	    // Auswertung NIO 
	    #BEA1.NOK := #SS.BEA[1]._Finish AND (#SS.BEA[1]._NOK OR NOT #SS.BEA[1]._OK) AND NOT #BEA1.HOK AND NOT #BEA1.deselect;
	    
	    // BEA aktuell
	    #BEA1.act_BEA := #SS.BEA[1]._act;
	    
	    // BEA belegt
	    #BEA1.active := #Para_active.%X1;
	END_REGION
	REGION _BEA2 Auswerten_
	    // BEA2 - Auswerten
	    
	    // Reset
	    IF #Reset THEN
	        #SS.BEA[2]._OK := false;
	        #SS.BEA[2]._NOK := false;
	        #SS.BEA[2]._Finish := false;
	        #SS.BEA[2]._act := false;
	        #SS.BEA[2]._OP_OK := false;
	    END_IF;
	    
	    // Reset_HIO
	    IF #Reset AND NOT #BEA2.deselect THEN
	        #BEA2.HOK := false;
	    END_IF;
	    IF (#pf_Reset_Hand_OK AND #BEA2.HOK) OR #BEA2.Reset_HOK THEN
	        #SS.BEA[2]._OK := false;
	        #SS.BEA[2]._NOK := true;
	        #SS.BEA[2]._Finish := true;
	        #BEA2.HOK := false;
	    END_IF;
	    
	    // Reset Abwahl 
	    IF #pf_Reset_Des AND #BEA2.deselect AND #SS.BEA[2]._Finish THEN
	        #SS.BEA[2]._OK := false;
	        #SS.BEA[2]._NOK := true;
	        #SS.BEA[2]._Finish := true;
	        #BEA2.deselect := false;
	    END_IF;
	    
	    // Abgewählt 
	    IF #BEA2.deselect THEN
	        #SS.BEA[2]._OK := false;
	        #SS.BEA[2]._NOK := false;
	        #SS.BEA[2]._Finish := true;
	    END_IF;
	    
	    // Hand IO 
	    IF #BEA2.HOK THEN
	        #SS.BEA[2]._OK := TRUE;
	        #SS.BEA[2]._NOK := FALSE;
	        #SS.BEA[2]._Finish := true;
	    END_IF;
	    
	    // Auswertung IO 
	    #BEA2.OK := #SS.BEA[2]._Finish AND #SS.BEA[2]._OK AND NOT #SS.BEA[2]._NOK AND NOT #BEA2.HOK AND NOT #BEA2.deselect AND NOT #BEA2.NOK;
	    
	    // Auswertung NIO 
	    #BEA2.NOK := #SS.BEA[2]._Finish AND (#SS.BEA[2]._NOK OR NOT #SS.BEA[2]._OK) AND NOT #BEA2.HOK AND NOT #BEA2.deselect;
	    
	    // BEA aktuell
	    #BEA2.act_BEA := #SS.BEA[2]._act;
	    
	    // BEA belegt
	    #BEA2.active := #Para_active.%X2;
	END_REGION
	REGION _BEA3 Auswerten_
	    // BEA3 - Auswerten
	    
	    // Reset
	    IF #Reset THEN
	        #SS.BEA[3]._OK := false;
	        #SS.BEA[3]._NOK := false;
	        #SS.BEA[3]._Finish := false;
	        #SS.BEA[3]._act := false;
	        #SS.BEA[3]._OP_OK := false;
	    END_IF;
	    
	    // Reset_HIO
	    IF #Reset AND NOT #BEA3.deselect THEN
	        #BEA3.HOK := false;
	    END_IF;
	    IF (#pf_Reset_Hand_OK AND #BEA3.HOK) OR #BEA3.Reset_HOK THEN
	        #SS.BEA[3]._OK := false;
	        #SS.BEA[3]._NOK := true;
	        #SS.BEA[3]._Finish := true;
	        #BEA3.HOK := false;
	    END_IF;
	    
	    // Reset Abwahl 
	    IF #pf_Reset_Des AND #BEA3.deselect AND #SS.BEA[3]._Finish THEN
	        #SS.BEA[3]._OK := false;
	        #SS.BEA[3]._NOK := true;
	        #SS.BEA[3]._Finish := true;
	        #BEA3.deselect := false;
	    END_IF;
	    
	    // Abgewählt 
	    IF #BEA3.deselect THEN
	        #SS.BEA[3]._OK := false;
	        #SS.BEA[3]._NOK := false;
	        #SS.BEA[3]._Finish := true;
	    END_IF;
	    
	    // Hand IO 
	    IF #BEA3.HOK THEN
	        #SS.BEA[3]._OK := TRUE;
	        #SS.BEA[3]._NOK := FALSE;
	        #SS.BEA[3]._Finish := true;
	    END_IF;
	    
	    // Auswertung IO 
	    #BEA3.OK := #SS.BEA[3]._Finish AND #SS.BEA[3]._OK AND NOT #SS.BEA[3]._NOK AND NOT #BEA3.HOK AND NOT #BEA3.deselect AND NOT #BEA3.NOK;
	    
	    // Auswertung NIO 
	    #BEA3.NOK := #SS.BEA[3]._Finish AND (#SS.BEA[3]._NOK OR NOT #SS.BEA[3]._OK) AND NOT #BEA3.HOK AND NOT #BEA3.deselect;
	    
	    // BEA aktuell
	    #BEA3.act_BEA := #SS.BEA[3]._act;
	    
	    // BEA belegt
	    #BEA3.active := #Para_active.%X3;
	END_REGION
	REGION _BEA4 Auswerten_
	   // BEA4 - Auswerten
	    
	    // Reset
	    IF #Reset THEN
	        #SS.BEA[4]._OK := false;
	        #SS.BEA[4]._NOK := false;
	        #SS.BEA[4]._Finish := false;
	        #SS.BEA[4]._act := false;
	        #SS.BEA[4]._OP_OK := false;
	    END_IF;
	    
	    // Reset_HIO
	    IF #Reset AND NOT #BEA4.deselect THEN
	        #BEA4.HOK := false;
	    END_IF;
	    IF (#pf_Reset_Hand_OK AND #BEA4.HOK) OR #BEA4.Reset_HOK THEN
	        #SS.BEA[4]._OK := false;
	        #SS.BEA[4]._NOK := true;
	        #SS.BEA[4]._Finish := true;
	        #BEA4.HOK := false;
	    END_IF;
	    
	    // Reset Abwahl 
	    IF #pf_Reset_Des AND #BEA4.deselect AND #SS.BEA[4]._Finish THEN
	        #SS.BEA[4]._OK := false;
	        #SS.BEA[4]._NOK := true;
	        #SS.BEA[4]._Finish := true;
	        #BEA4.deselect := false;
	    END_IF;
	    
	    // Abgewählt 
	    IF #BEA4.deselect THEN
	        #SS.BEA[4]._OK := false;
	        #SS.BEA[4]._NOK := false;
	        #SS.BEA[4]._Finish := true;
	    END_IF;
	    
	    // Hand IO 
	    IF #BEA4.HOK THEN
	        #SS.BEA[4]._OK := TRUE;
	        #SS.BEA[4]._NOK := FALSE;
	        #SS.BEA[4]._Finish := true;
	    END_IF;
	    
	    // Auswertung IO 
	    #BEA4.OK := #SS.BEA[4]._Finish AND #SS.BEA[4]._OK AND NOT #SS.BEA[4]._NOK AND NOT #BEA4.HOK AND NOT #BEA4.deselect AND NOT #BEA4.NOK;
	    
	    // Auswertung NIO 
	    #BEA4.NOK := #SS.BEA[4]._Finish AND (#SS.BEA[4]._NOK OR NOT #SS.BEA[4]._OK) AND NOT #BEA4.HOK AND NOT #BEA4.deselect;
	    
	    // BEA aktuell
	    #BEA4.act_BEA := #SS.BEA[4]._act;
	    
	    // BEA belegt
	    #BEA4.active := #Para_active.%X4;
	END_REGION
	REGION _BEA5 Auswerten_
	    // BEA5 - Auswerten
	    
	    // Reset
	    IF #Reset THEN
	        #SS.BEA[5]._OK := false;
	        #SS.BEA[5]._NOK := false;
	        #SS.BEA[5]._Finish := false;
	        #SS.BEA[5]._act := false;
	        #SS.BEA[5]._OP_OK := false;
	    END_IF;
	    
	    // Reset_HIO
	    IF #Reset AND NOT #BEA5.deselect THEN
	        #BEA5.HOK := false;
	    END_IF;
	    IF (#pf_Reset_Hand_OK AND #BEA5.HOK) OR #BEA5.Reset_HOK THEN
	        #SS.BEA[5]._OK := false;
	        #SS.BEA[5]._NOK := true;
	        #SS.BEA[5]._Finish := true;
	        #BEA5.HOK := false;
	    END_IF;
	    
	    // Reset Abwahl 
	    IF #pf_Reset_Des AND #BEA5.deselect AND #SS.BEA[5]._Finish THEN
	        #SS.BEA[5]._OK := false;
	        #SS.BEA[5]._NOK := true;
	        #SS.BEA[5]._Finish := true;
	        #BEA5.deselect := false;
	    END_IF;
	    
	    // Abgewählt 
	    IF #BEA5.deselect THEN
	        #SS.BEA[5]._OK := false;
	        #SS.BEA[5]._NOK := false;
	        #SS.BEA[5]._Finish := true;
	    END_IF;
	    
	    // Hand IO 
	    IF #BEA5.HOK THEN
	        #SS.BEA[5]._OK := TRUE;
	        #SS.BEA[5]._NOK := FALSE;
	        #SS.BEA[5]._Finish := true;
	    END_IF;
	    
	    // Auswertung IO 
	    #BEA5.OK := #SS.BEA[5]._Finish AND #SS.BEA[5]._OK AND NOT #SS.BEA[5]._NOK AND NOT #BEA5.HOK AND NOT #BEA5.deselect AND NOT #BEA5.NOK;
	    
	    // Auswertung NIO 
	    #BEA5.NOK := #SS.BEA[5]._Finish AND (#SS.BEA[5]._NOK OR NOT #SS.BEA[5]._OK) AND NOT #BEA5.HOK AND NOT #BEA5.deselect;
	    
	    // BEA aktuell
	    #BEA5.act_BEA := #SS.BEA[5]._act;
	    
	    // BEA belegt
	    #BEA5.active := #Para_active.%X5;
	END_REGION
	REGION _BEA6 Auswerten_
	    // BEA6 - Auswerten
	    
	    // Reset
	    IF #Reset THEN
	        #SS.BEA[6]._OK := false;
	        #SS.BEA[6]._NOK := false;
	        #SS.BEA[6]._Finish := false;
	        #SS.BEA[6]._act := false;
	        #SS.BEA[6]._OP_OK := false;
	    END_IF;
	    
	    // Reset_HIO
	    IF #Reset AND NOT #BEA6.deselect THEN
	        #BEA6.HOK := false;
	    END_IF;
	    IF (#pf_Reset_Hand_OK AND #BEA6.HOK) OR #BEA6.Reset_HOK THEN
	        #SS.BEA[6]._OK := false;
	        #SS.BEA[6]._NOK := true;
	        #SS.BEA[6]._Finish := true;
	        #BEA6.HOK := false;
	    END_IF;
	    
	    // Reset Abwahl 
	    IF #pf_Reset_Des AND #BEA6.deselect AND #SS.BEA[6]._Finish THEN
	        #SS.BEA[6]._OK := false;
	        #SS.BEA[6]._NOK := true;
	        #SS.BEA[6]._Finish := true;
	        #BEA6.deselect := false;
	    END_IF;
	    
	    // Abgewählt 
	    IF #BEA6.deselect THEN
	        #SS.BEA[6]._OK := false;
	        #SS.BEA[6]._NOK := false;
	        #SS.BEA[6]._Finish := true;
	    END_IF;
	    
	    // Hand IO 
	    IF #BEA6.HOK THEN
	        #SS.BEA[6]._OK := TRUE;
	        #SS.BEA[6]._NOK := FALSE;
	        #SS.BEA[6]._Finish := true;
	    END_IF;
	    
	    // Auswertung IO 
	    #BEA6.OK := #SS.BEA[6]._Finish AND #SS.BEA[6]._OK AND NOT #SS.BEA[6]._NOK AND NOT #BEA6.HOK AND NOT #BEA6.deselect AND NOT #BEA6.NOK;
	    
	    // Auswertung NIO 
	    #BEA6.NOK := #SS.BEA[6]._Finish AND (#SS.BEA[6]._NOK OR NOT #SS.BEA[6]._OK) AND NOT #BEA6.HOK AND NOT #BEA6.deselect;
	    
	    // BEA aktuell
	    #BEA6.act_BEA := #SS.BEA[6]._act;
	    
	    // BEA belegt
	    #BEA6.active := #Para_active.%X6;
	END_REGION
	REGION _BEA7 Auswerten_
	    // BEA7 - Auswerten
	    
	    // Reset
	    IF #Reset THEN
	        #SS.BEA[7]._OK := false;
	        #SS.BEA[7]._NOK := false;
	        #SS.BEA[7]._Finish := false;
	        #SS.BEA[7]._act := false;
	        #SS.BEA[7]._OP_OK := false;
	    END_IF;
	    
	    // Reset_HIO
	    IF #Reset AND NOT #BEA7.deselect THEN
	        #BEA7.HOK := false;
	    END_IF;
	    IF (#pf_Reset_Hand_OK AND #BEA7.HOK) OR #BEA7.Reset_HOK THEN
	        #SS.BEA[7]._OK := false;
	        #SS.BEA[7]._NOK := true;
	        #SS.BEA[7]._Finish := true;
	        #BEA7.HOK := false;
	    END_IF;
	    
	    // Reset Abwahl 
	    IF #pf_Reset_Des AND #BEA7.deselect AND #SS.BEA[7]._Finish THEN
	        #SS.BEA[7]._OK := false;
	        #SS.BEA[7]._NOK := true;
	        #SS.BEA[7]._Finish := true;
	        #BEA7.deselect := false;
	    END_IF;
	    
	    // Abgewählt 
	    IF #BEA7.deselect THEN
	        #SS.BEA[7]._OK := false;
	        #SS.BEA[7]._NOK := false;
	        #SS.BEA[7]._Finish := true;
	    END_IF;
	    
	    // Hand IO 
	    IF #BEA7.HOK THEN
	        #SS.BEA[7]._OK := TRUE;
	        #SS.BEA[7]._NOK := FALSE;
	        #SS.BEA[7]._Finish := true;
	    END_IF;
	    
	    // Auswertung IO 
	    #BEA7.OK := #SS.BEA[7]._Finish AND #SS.BEA[7]._OK AND NOT #SS.BEA[7]._NOK AND NOT #BEA7.HOK AND NOT #BEA7.deselect AND NOT #BEA7.NOK;
	    
	    // Auswertung NIO 
	    #BEA7.NOK := #SS.BEA[7]._Finish AND (#SS.BEA[7]._NOK OR NOT #SS.BEA[7]._OK) AND NOT #BEA7.HOK AND NOT #BEA7.deselect;
	    
	    // BEA aktuell
	    #BEA7.act_BEA := #SS.BEA[7]._act;
	    
	    // BEA belegt
	    #BEA7.active := #Para_active.%X7;
	END_REGION
	REGION _FM Next_
	    // Ausgabe FM Next
	    
	    // #BEA0 FM Next
	    #SS.BEA[0]._FMNext := #SS.BEA[0]._Finish AND #BEA0.FM_Zy2;
	    #BEA0.FM_Zy2 := #SS.BEA[0]._Finish;
	    
	    // #BEA1 FM Next
	    #SS.BEA[1]._FMNext := #SS.BEA[1]._Finish AND #BEA1.FM_Zy2;
	    #BEA1.FM_Zy2 := #SS.BEA[1]._Finish;
	    
	    // #BEA2 FM Next
	    #SS.BEA[2]._FMNext := #SS.BEA[2]._Finish AND #BEA2.FM_Zy2;
	    #BEA2.FM_Zy2 := #SS.BEA[2]._Finish;
	    
	    // #BEA3 FM Next
	    #SS.BEA[3]._FMNext := #SS.BEA[3]._Finish AND #BEA3.FM_Zy2;
	    #BEA3.FM_Zy2 := #SS.BEA[3]._Finish;
	    
	    // #BEA4 FM Next
	    #SS.BEA[4]._FMNext := #SS.BEA[4]._Finish AND #BEA4.FM_Zy2;
	    #BEA4.FM_Zy2 := #SS.BEA[4]._Finish;
	    
	    // #BEA5 FM Next
	    #SS.BEA[5]._FMNext := #SS.BEA[5]._Finish AND #BEA5.FM_Zy2;
	    #BEA5.FM_Zy2 := #SS.BEA[5]._Finish;
	    
	    // #BEA6 FM Next
	    #SS.BEA[6]._FMNext := #SS.BEA[6]._Finish AND #BEA6.FM_Zy2;
	    #BEA6.FM_Zy2 := #SS.BEA[6]._Finish;
	    
	    // #BEA7 FM Next
	    #SS.BEA[7]._FMNext := #SS.BEA[7]._Finish AND #BEA7.FM_Zy2;
	    #BEA7.FM_Zy2 := #SS.BEA[7]._Finish;
	    
	END_REGION
	REGION _Bearbeitung ist abgewählt_
	    //BEA0 Abgewählt
	    #SS.BEA[0]._Deselected := #BEA0.deselect;
	    
	    //BEA1 Abgewählt
	    #SS.BEA[1]._Deselected := #BEA1.deselect;
	    
	    //BEA2 Abgewählt
	    #SS.BEA[2]._Deselected := #BEA2.deselect;
	    
	    //BEA3 Abgewählt
	    #SS.BEA[3]._Deselected := #BEA3.deselect;
	    
	    //BEA4 Abgewählt
	    #SS.BEA[4]._Deselected := #BEA4.deselect;
	    
	    //BEA5 Abgewählt
	    #SS.BEA[5]._Deselected := #BEA5.deselect;
	    
	    //BEA6 Abgewählt
	    #SS.BEA[6]._Deselected := #BEA6.deselect;
	    
	    //BEA7 Abgewählt
	    #SS.BEA[7]._Deselected := #BEA7.deselect;
	    
	    
	END_REGION
	REGION _Bearbeitung ist HIO gesetzt_
	    //BEA0 HIO
	    #SS.BEA[0]._HOK := #BEA0.HOK;
	    
	    //BEA1 HIO
	    #SS.BEA[1]._HOK := #BEA1.HOK;
	    
	    //BEA2 HIO
	    #SS.BEA[2]._HOK := #BEA2.HOK;
	    
	    //BEA3 HIO
	    #SS.BEA[3]._HOK := #BEA3.HOK;
	    
	    //BEA4 HIO
	    #SS.BEA[4]._HOK := #BEA4.HOK;
	    
	    //BEA5 HIO
	    #SS.BEA[5]._HOK := #BEA5.HOK;
	    
	    //BEA6 HIO
	    #SS.BEA[6]._HOK := #BEA6.HOK;
	    
	    //BEA7 HIO
	    #SS.BEA[7]._HOK := #BEA7.HOK;
	    
	END_REGION
	REGION _Montagefehler vorhanden_
	    #"Group Mounting Fault" :=
	    (#SS.BEA[0]._Finish AND #SS.BEA[0]._NOK AND NOT #BEA0.deselect) OR
	    (#SS.BEA[1]._Finish AND #SS.BEA[1]._NOK AND NOT #BEA1.deselect) OR
	    (#SS.BEA[2]._Finish AND #SS.BEA[2]._NOK AND NOT #BEA2.deselect) OR
	    (#SS.BEA[3]._Finish AND #SS.BEA[3]._NOK AND NOT #BEA3.deselect) OR
	    (#SS.BEA[4]._Finish AND #SS.BEA[4]._NOK AND NOT #BEA4.deselect) OR
	    (#SS.BEA[5]._Finish AND #SS.BEA[5]._NOK AND NOT #BEA5.deselect) OR
	    (#SS.BEA[6]._Finish AND #SS.BEA[6]._NOK AND NOT #BEA6.deselect) OR
	    (#SS.BEA[7]._Finish AND #SS.BEA[7]._NOK AND NOT #BEA7.deselect);
	    
	END_REGION
	REGION _Ampel 1_
	    
	    // Darstellungsfarbe
	    IF #BEA0.HOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[1]].colour := 6;                     // Hellgrün - Hand IO
	    ELSIF #BEA0.NOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[1]].colour := 5;                     // Rot - NIO
	    ELSIF #BEA0.deselect THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[1]].colour := 4;                     // Blau - Abwahl
	    ELSIF #BEA0.OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[1]].colour := 3;                     // Grün - IO
	    ELSIF #BEA0.act_BEA AND #BEA0.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[1]].colour := 2;                     // Gelb - Bearbeitung aktuell
	    ELSIF #BEA0.act_BEA AND NOT #BEA0.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[1]].colour := 1;                     // Gelb blinken - Bearbeitung aktuell
	    ELSE
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[1]].colour := 0;                     // keine Farbe
	    END_IF;
	    
	END_REGION
	REGION _Ampel 2_
	    
	    // Darstellungsfarbe
	    IF #BEA1.HOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[2]].colour := 6;                     // Hellgrün - Hand IO
	    ELSIF #BEA1.NOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[2]].colour := 5;                     // Rot - NIO
	    ELSIF #BEA1.deselect THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[2]].colour := 4;                     // Blau - Abwahl
	    ELSIF #BEA1.OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[2]].colour := 3;                     // Grün - IO
	    ELSIF #BEA1.act_BEA AND #BEA1.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[2]].colour := 2;                     // Gelb - Bearbeitung aktuell
	    ELSIF #BEA1.act_BEA AND NOT #BEA1.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[2]].colour := 1;                     // Gelb blinken - Bearbeitung aktuell
	    ELSE
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[2]].colour := 0;                     // keine Farbe
	    END_IF;
	END_REGION
	REGION _Ampel 3_
	    
	    // Darstellungsfarbe
	    IF #BEA2.HOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[3]].colour := 6;                     // Hellgrün - Hand IO
	    ELSIF #BEA2.NOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[3]].colour := 5;                     // Rot - NIO
	    ELSIF #BEA2.deselect THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[3]].colour := 4;                     // Blau - Abwahl
	    ELSIF #BEA2.OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[3]].colour := 3;                     // Grün - IO
	    ELSIF #BEA2.act_BEA AND #BEA2.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[3]].colour := 2;                     // Gelb - Bearbeitung aktuell
	    ELSIF #BEA2.act_BEA AND NOT #BEA2.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[3]].colour := 1;                     // Gelb blinken - Bearbeitung aktuell
	    ELSE
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[3]].colour := 0;                     // keine Farbe
	    END_IF;
	END_REGION
	REGION _Ampel 4_
	    
	    // Darstellungsfarbe
	    IF #BEA3.HOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[4]].colour := 6;                     // Hellgrün - Hand IO
	    ELSIF #BEA3.NOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[4]].colour := 5;                     // Rot - NIO
	    ELSIF #BEA3.deselect THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[4]].colour := 4;                     // Blau - Abwahl
	    ELSIF #BEA3.OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[4]].colour := 3;                     // Grün - IO
	    ELSIF #BEA3.act_BEA AND #BEA3.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[4]].colour := 2;                     // Gelb - Bearbeitung aktuell
	    ELSIF #BEA3.act_BEA AND NOT #BEA3.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[4]].colour := 1;                     // Gelb blinken - Bearbeitung aktuell
	    ELSE
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[4]].colour := 0;                     // keine Farbe
	    END_IF;
	END_REGION
	REGION _Ampel 5_
	    
	    // Darstellungsfarbe
	    IF #BEA4.HOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[5]].colour := 6;                     // Hellgrün - Hand IO
	    ELSIF #BEA4.NOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[5]].colour := 5;                     // Rot - NIO
	    ELSIF #BEA4.deselect THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[5]].colour := 4;                     // Blau - Abwahl
	    ELSIF #BEA4.OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[5]].colour := 3;                     // Grün - IO
	    ELSIF #BEA4.act_BEA AND #BEA4.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[5]].colour := 2;                     // Gelb - Bearbeitung aktuell
	    ELSIF #BEA4.act_BEA AND NOT #BEA4.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[5]].colour := 1;                     // Gelb blinken - Bearbeitung aktuell
	    ELSE
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[5]].colour := 0;                     // keine Farbe
	    END_IF;
	END_REGION
	REGION _Ampel 6_
	    
	    // Darstellungsfarbe
	    IF #BEA5.HOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[6]].colour := 6;                     // Hellgrün - Hand IO
	    ELSIF #BEA5.NOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[6]].colour := 5;                     // Rot - NIO
	    ELSIF #BEA5.deselect THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[6]].colour := 4;                     // Blau - Abwahl
	    ELSIF #BEA5.OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[6]].colour := 3;                     // Grün - IO
	    ELSIF #BEA5.act_BEA AND #BEA5.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[6]].colour := 2;                     // Gelb - Bearbeitung aktuell
	    ELSIF #BEA5.act_BEA AND NOT #BEA5.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[6]].colour := 1;                     // Gelb blinken - Bearbeitung aktuell
	    ELSE
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[6]].colour := 0;                     // keine Farbe
	    END_IF;
	END_REGION
	REGION _Ampel 7_
	    
	    // Darstellungsfarbe
	    IF #BEA6.HOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[7]].colour := 6;                     // Hellgrün - Hand IO
	    ELSIF #BEA6.NOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[7]].colour := 5;                     // Rot - NIO
	    ELSIF #BEA6.deselect THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[7]].colour := 4;                     // Blau - Abwahl
	    ELSIF #BEA6.OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[7]].colour := 3;                     // Grün - IO
	    ELSIF #BEA6.act_BEA AND #BEA6.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[7]].colour := 2;                     // Gelb - Bearbeitung aktuell
	    ELSIF #BEA6.act_BEA AND NOT #BEA6.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[7]].colour := 1;                     // Gelb blinken - Bearbeitung aktuell
	    ELSE
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[7]].colour := 0;                     // keine Farbe
	    END_IF;
	END_REGION
	REGION _Ampel 8_
	    
	    // Darstellungsfarbe
	    IF #BEA7.HOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[8]].colour := 6;                     // Hellgrün - Hand IO
	    ELSIF #BEA7.NOK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[8]].colour := 5;                     // Rot - NIO
	    ELSIF #BEA7.deselect THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[8]].colour := 4;                     // Blau - Abwahl
	    ELSIF #BEA7.OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[8]].colour := 3;                     // Grün - IO
	    ELSIF #BEA7.act_BEA AND #BEA7.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[8]].colour := 2;                     // Gelb - Bearbeitung aktuell
	    ELSIF #BEA7.act_BEA AND NOT #BEA7.OP_OK THEN
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[8]].colour := 1;                     // Gelb blinken - Bearbeitung aktuell
	    ELSE
	        #DB_Operator_Screen.LAMP[#t_Lamp_Nr[8]].colour := 0;                     // keine Farbe
	    END_IF;
	END_REGION
	REGION _Ausgabe_
	    IF #Edit_active THEN
	        #DB_Operator_Screen.GENERAL.Lamp_Nr := #Edit_Select_MP270;
	        #DB_Operator_Screen.EDIT.Lamp_Nr := #Edit_Active_MP270;
	        #DB_Operator_Screen.EDIT.BUTTON_DESELECTION.function_active := #Edit_deselect;
	        #DB_Operator_Screen.EDIT.BUTTON_HAND_OK.function_active := #Edit_Hand_OK;
	    END_IF;
	    
	    //Gruppe IO
	    #"Group OK" :=
	    (#BEA0.OK OR #BEA0.HOK OR NOT #BEA0.active) AND
	    (#BEA1.OK OR #BEA1.HOK OR NOT #BEA1.active) AND
	    (#BEA2.OK OR #BEA2.HOK OR NOT #BEA2.active) AND
	    (#BEA3.OK OR #BEA3.HOK OR NOT #BEA3.active) AND
	    (#BEA4.OK OR #BEA4.HOK OR NOT #BEA4.active) AND
	    (#BEA5.OK OR #BEA5.HOK OR NOT #BEA5.active) AND
	    (#BEA6.OK OR #BEA6.HOK OR NOT #BEA6.active) AND
	    (#BEA7.OK OR #BEA7.HOK OR NOT #BEA7.active);
	    
	    //Gruppe NIO
	    #"Group NOK" :=
	    (#BEA0.OK OR #BEA0.HOK OR #BEA0.NOK OR #BEA0.deselect OR NOT #BEA0.active) AND
	    (#BEA1.OK OR #BEA1.HOK OR #BEA1.NOK OR #BEA1.deselect OR NOT #BEA1.active) AND
	    (#BEA2.OK OR #BEA2.HOK OR #BEA2.NOK OR #BEA2.deselect OR NOT #BEA2.active) AND
	    (#BEA3.OK OR #BEA3.HOK OR #BEA3.NOK OR #BEA3.deselect OR NOT #BEA3.active) AND
	    (#BEA4.OK OR #BEA4.HOK OR #BEA4.NOK OR #BEA4.deselect OR NOT #BEA4.active) AND
	    (#BEA5.OK OR #BEA5.HOK OR #BEA5.NOK OR #BEA5.deselect OR NOT #BEA5.active) AND
	    (#BEA6.OK OR #BEA6.HOK OR #BEA6.NOK OR #BEA6.deselect OR NOT #BEA6.active) AND
	    (#BEA7.OK OR #BEA7.HOK OR #BEA7.NOK OR #BEA7.deselect OR NOT #BEA7.active)
	    AND NOT #"Group OK";
	    
	    // Abwahl vorhanden
	    #"Deselection available" :=
	    #BEA0.deselect OR
	    #BEA1.deselect OR
	    #BEA2.deselect OR
	    #BEA3.deselect OR
	    #BEA4.deselect OR
	    #BEA5.deselect OR
	    #BEA6.deselect OR
	    #BEA7.deselect;
	    
	    // HIO vorhanden
	    #"Hand OK available" :=
	    #BEA0.HOK OR
	    #BEA1.HOK OR
	    #BEA2.HOK OR
	    #BEA3.HOK OR
	    #BEA4.HOK OR
	    #BEA5.HOK OR
	    #BEA6.HOK OR
	    #BEA7.HOK;
	    
	END_REGION
	REGION _Daten eintragen_
	    //Gruppe belegt
	    #DB_Operator_Screen.D.GRP_BUSY[#BEA_Group] :=
	    #BEA0.active OR
	    #BEA1.active OR
	    #BEA2.active OR
	    #BEA3.active OR
	    #BEA4.active OR
	    #BEA5.active OR
	    #BEA6.active OR
	    #BEA7.active;
	    
	    // Gruppe IO
	    #DB_Operator_Screen.D.GRP_OK[#BEA_Group] := #"Group OK";
	    
	    // Gruppe NIO
	    #DB_Operator_Screen.D.GRP_NOK[#BEA_Group] := #"Group NOK";
	    
	    // Gruppe Abwahl
	    #DB_Operator_Screen.D.GRP_DESELECTED[#BEA_Group] := #"Deselection available";
	    
	    // Gruppe HIO
	    #DB_Operator_Screen.D.GRP_HAND_OK[#BEA_Group] := #"Hand OK available";
	    
	    //----- Einzelbits eintragen -----
	    
	    // Reset Durchlaufzähler
	     
	    
	    #DB_Operator_Screen.D.GRP[#BEA_Group].Continuous_Counter := #Flow_Indicator;
	    IF #Reset THEN
	        #DB_Operator_Screen.D.GRP[#BEA_Group].Continuous_Counter := 0;
	    END_IF;
	    
	    // BEA belegt
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Loaded[0] := #BEA0.active;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Loaded[1] := #BEA1.active;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Loaded[2] := #BEA2.active;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Loaded[3] := #BEA3.active;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Loaded[4] := #BEA4.active;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Loaded[5] := #BEA5.active;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Loaded[6] := #BEA6.active;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Loaded[7] := #BEA7.active;
	    
	    // BEA i.O.
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_OK[0] := #BEA0.OK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_OK[1] := #BEA1.OK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_OK[2] := #BEA2.OK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_OK[3] := #BEA3.OK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_OK[4] := #BEA4.OK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_OK[5] := #BEA5.OK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_OK[6] := #BEA6.OK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_OK[7] := #BEA7.OK;
	    
	    // BEA n.i.O.
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_NOK[0] := #BEA0.NOK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_NOK[1] := #BEA1.NOK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_NOK[2] := #BEA2.NOK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_NOK[3] := #BEA3.NOK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_NOK[4] := #BEA4.NOK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_NOK[5] := #BEA5.NOK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_NOK[6] := #BEA6.NOK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_NOK[7] := #BEA7.NOK;
	    
	    // BEA abgewählt
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Deselected[0] := #BEA0.deselect;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Deselected[1] := #BEA1.deselect;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Deselected[2] := #BEA2.deselect;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Deselected[3] := #BEA3.deselect;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Deselected[4] := #BEA4.deselect;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Deselected[5] := #BEA5.deselect;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Deselected[6] := #BEA6.deselect;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_Deselected[7] := #BEA7.deselect;
	    
	    // BEA Hand i.O.
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_HAND_OK[0] := #BEA0.HOK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_HAND_OK[1] := #BEA1.HOK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_HAND_OK[2] := #BEA2.HOK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_HAND_OK[3] := #BEA3.HOK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_HAND_OK[4] := #BEA4.HOK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_HAND_OK[5] := #BEA5.HOK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_HAND_OK[6] := #BEA6.HOK;
	    #DB_Operator_Screen.D.GRP[#BEA_Group].EZB_HAND_OK[7] := #BEA7.HOK;
	    
	END_REGION
	REGION _Schnittstelle Ausgeben_
	    // Schnittstelle (IN/OUT) Einlesen
	    
	    //--BEA0--
	    #BEA_0_Finished := #SS.BEA[0]._Finish;
	    #BEA_0_OK := #SS.BEA[0]._OK;
	    #BEA_0_NOK := #SS.BEA[0]._NOK;
	    
	    //--BEA1--
	    #BEA_1_Finished := #SS.BEA[1]._Finish;
	    #BEA_1_OK := #SS.BEA[1]._OK;
	    #BEA_1_NOK := #SS.BEA[1]._NOK;
	    
	    //--BEA2--
	    #BEA_2_Finished := #SS.BEA[2]._Finish;
	    #BEA_2_OK :=#SS.BEA[2]._OK;
	    #BEA_2_NOK := #SS.BEA[2]._NOK;
	    
	    //--BEA3--
	    #BEA_3_Finished :=#SS.BEA[3]._Finish;
	    #BEA_3_OK := #SS.BEA[3]._OK;
	    #BEA_3_NOK := #SS.BEA[3]._NOK;
	    
	    //--BEA4--
	    #BEA_4_Finished := #SS.BEA[4]._Finish;
	    #BEA_4_OK := #SS.BEA[4]._OK;
	    #BEA_4_NOK := #SS.BEA[4]._NOK;
	    
	    //--BEA5--
	    #BEA_5_Finished := #SS.BEA[5]._Finish;
	    #BEA_5_OK := #SS.BEA[5]._OK;
	    #BEA_5_NOK := #SS.BEA[5]._NOK;
	    
	    //--BEA6--
	    #BEA_6_Finished := #SS.BEA[6]._Finish;
	    #BEA_6_OK := #SS.BEA[6]._OK;
	    #BEA_6_NOK := #SS.BEA[6]._NOK;
	    
	    //--BEA7--
	    #BEA_7_Finished := #SS.BEA[7]._Finish;
	    #BEA_7_OK := #SS.BEA[7]._OK;
	    #BEA_7_NOK := #SS.BEA[7]._NOK;
	  
	END_REGION
	
END_FUNCTION_BLOCK

